export default class ArticlesController {

    constructor($scope, $http) {
        this.scope = $scope;
        this.http = $http;
    }

    getArticles() {
        let $scope = this.scope;
        $scope.range = [];
        this.http.get('http://127.0.0.1:3000/article').success(function (data) {
            $scope.articles = data.data;
            $scope.totalPages = Math.trunc($scope.articles.length / $scope.itemPerPage);
            if($scope.articles.length % $scope.itemPerPage > 0)
                $scope.totalPages++;
            for (var i = 1; i <= $scope.totalPages; i++) {
                $scope.range.push(i);
            }
        });
    }

    addCommentListener() {
        let $scope = this.scope;
        let $http = this.http;
        $scope.commentaires = [];
        $scope.classe = [];
        $scope.CheckRemplissage = function (id) {
            if ($scope.commentaires[id]) {
                $scope.classe[id] = 'has-success';
            } else {
                $scope.classe[id] = 'has-error';
            }
        };
        $scope.addComment = function (id) {
            if ($scope.commentaires[id]) {
                var comment = {
                    contenu: $scope.commentaires[id],
                    //TODO : matching avec le user connectÃ©
                    auteur: "test"
                };
                $http.post('http://127.0.0.1:3000/article/' + id, comment).success(function (data) {
                    $http.get('http://127.0.0.1:3000/article').success(function (data) {
                        $scope.articles = data.data;
                        $scope.commentaires[id] = "";
                    });
                });
            }
            else
                $scope.classe[id] = 'has-error';
        }
    }

    addPaginationListener() {
        let $scope = this.scope;

        this.scope.currentPage = 1;
        this.scope.itemPerPage = 5;
        console.log($scope);
        $scope.nextPage = function () {
            if ($scope.currentPage != $scope.totalPages)
                $scope.currentPage++;
        };
        $scope.previousPage = function () {
            if ($scope.currentPage != 1)
                $scope.currentPage--;
        };
        $scope.goToPage = function (numPage) {
            if ($scope.currentPage != numPage)
                $scope.currentPage = numPage;
        };
        $scope.isActivePage = function (numPage) {
            if ($scope.currentPage == numPage)
                return 'active';
        };
        $scope.isArticleInPage = function (indexArticle) {
            if (indexArticle >= ($scope.itemPerPage * ($scope.currentPage - 1)) && indexArticle < ($scope.itemPerPage * $scope.currentPage))
                return 1;
            else
                return 0;
        };
    }
}
